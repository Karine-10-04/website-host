load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;

user root;
worker_processes auto;
error_log /var/log/nginx/error.log warn;

events { worker_connections 1024; }

http {
    include       /etc/nginx/mime.types;
    default_type text/plain;	
	client_body_buffer_size 1M;
	lua_package_path "/etc/nginx/lua/?.lua;;";
    server {
		listen                  80;
		root                    /usr/share/nginx/html;
		index                   index.html;
		server_name             localhost;
		location /webhook {
			#local handle = io.popen('/usr/local/bin/sync.sh > /var/log/nginx/error.log 2>&1 &');
			content_by_lua_block {
				local sha = require("sha2")
				local file, err = io.open("/var/log/nginx/error.log", "a")
				if not file then
					return ngx.exit (ngx.HTTP_NOT_ACCEPTABLE)				
				end

				ngx.req.read_body()
				local body = ngx.req.get_body_data()
				if body then
					file:write("Body: " .. body .. "\n")
					file:flush()
					local payload = string.gsub(body, "payload=", "")
				else
					local body = ""
					local payload = ""
				end

				local signaturebody = sha.hmac(sha.sha256, "foobar")
				signaturebody(body)
				file:write("Calculated Signature Body: " .. signaturebody() .. "\n")
     			file:flush()

				local signaturepayload = sha.hmac(sha.sha256, "foobar")
				signaturepayload(payload)
				file:write("Calculated Signature Payload: " .. signaturepayload() .. "\n")
     			file:flush()

				local headers = ngx.req.get_headers()
				local github_event = headers['x-github-event']
				if not github_event then
					github_event='push'
				end
				file:write("GitHub Event: " .. github_event .. "\n")
				file:flush()
				local webhook_sha = headers['X-Hub-Signature-256']
				if not webhook_sha then
					webhook_sha='none'
				end
				file:write("webhook_sha: " .. webhook_sha .. "\n")
				file:flush()
				if webhook_sha then 
					local secret = webhook_sha:gsub("sha256=", "")
					file:write("secret: " .. secret .. "\n")
					file:flush()
   					if secret == "$WEBHOOK_SECRET" then
						local handle = io.popen("GITHUB_EVENT='" .. github_event .. "' /usr/local/bin/sync.sh &")
						local out = handle:read("*a")
						handle:close()
					end
				end
     			file:flush()
     			file:close()


				ngx.say(out)
			}
		}		
	}
}
